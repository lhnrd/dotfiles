[user]
  name = Lucas Rinaldi
  email = lucashrinaldi@gmail.com

[core]
  attributesfile = ~/.gitattributes
  autocrlf = input
  editor = code
  excludesfile = ~/.gitignore_global
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol

[pull]
  rebase = true

[push]
  default = simple
  recurseSubmodules = check

[status]
  submodulesummary = 1

[init]
	defaultBranch = main

[alias]
  # Aliases
  aliases = !git config -l | grep alias | cut -c 7-

  # Add
  a = add --all
  ap = add . -p

  # Branch
  b = branch
  bm = branch --merged
  bmr = branch --merged --remote
  branch-name = !"git rev-parse --abbrev-ref HEAD"
  bn = branch-name

  # Commit
  c = commit
  ca = commit --amend
  cm = commit --message
  cme = commit --allow-empty --message
  cdv = commit --dry-run --verbose
  unc = reset HEAD~
  uns = reset HEAD --

  # Config
  cfg = config --global --edit

  # Cleanup
  cleanup-force-local = !"git branch | grep -v main | grep -v master | xargs git branch -D"
  cleanup-local-remote = !"git remote prune origin"

  # Checkout
  co = checkout
  cob = checkout -b

  # Diff
  df = diff
  dc = diff --cached # Show changes that have been staged

  # Fetch
  ft = fetch

  # List
  ls = ls-files
  ls-ign = ls-files -o -i --exclude-standard # Show files ignored by git

  # Log
  l = log
  l1 = l --oneline
  last = l -1 HEAD
  last1 = lo -1 HEAD
  lg = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"

  # Merge
  m = merge
  ma = merge --abort
  mc = merge --continue
  ms = merge --skip

  # Pull
  pl = pull --ff-only

  # Push
  ps = push
  psf = push --force
  pst = ps --tags
  psu = !"git push -u origin $(git bn)" # Push the current branch to the remote "origin", and set it to track the upstream branch
  psut = !"git psu --tags"
  psdel = !"git push origin :$(git bn)" # Delete the remote version of the current branch

  # Prune
  pr = prune -v

  # Rebase
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbi = rebase --interactive
  rbs = rebase --skip

  # Status
  st = status